# Aliases
if [ "$OS" == "Darwin" ]; then
  alias todo='~/dotfiles/repos/todo.txt-cli/todo.sh -d ~/dotfiles/repos/todo.txt-cli/todo.cfg'
fi

# php aliases
# allows editing of php.ini
alias pi='vim $(php -i | grep "Loaded Configuration File" | cut -d" " -f 5)'

alias dcs=drupalcs
alias dr=drush

# requires that hub be installed! "brew install hub"
alias git=hub
# http://stackoverflow.com/a/11369533
alias git-root='if [ "`git rev-parse --show-cdup`" != "" ]; then cd `git rev-parse --show-cdup`; fi'
alias gr=git-root
alias gd='git diff'
alias gs='git status'
alias gl='git log'
alias ..='cd ..'
alias cd..='cd ..'
alias cd...='cd ../../../'
alias ...='cd ../../../'
alias du='du -kh'
alias df='df -kTh'
alias mkdir='mkdir -p'
alias which='type -a'
alias h='history'
alias j='jobs -l'
alias akcurl='curl -I -H "Pragma: akamai-x-cache-on, akamai-x-cache-remote-on, akamai-x-check-cacheable, akamai-x-get-cache-key, akamai-x-get-extracted-values, akamai-x-get-nonces, akamai-x-get-ssl-client-session-id, akamai-x-get-true-cache-key, akamai-x-serial-no"'

# The 'ls' family
alias ll="ls -l"
alias ls='ls -hFG'       # add colors for filetype recognition
alias la='ls -Al'        # show hidden files
alias lx='ls -lB'        # sort by extension
alias lk='ls -lSr'       # sort by size, biggest last
alias lc='ls -ltcr'      # sort by and show change time, most recent last
alias lu='ls -ltur'      # sort by and show access time, most recent last
alias lt='ls -ltr'       # sort by date, most recent last
alias lm='ls -al | more' # pipe through 'more'
alias lr='ls -lR'        # recursive ls
alias tree='tree -CspugD'   # nice alternative to 'recursive ls'

alias bashsrc='source ~/.bash_profile'

# Functions
extract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2) tar xjf $1    ;;
      *.tar.gz)  tar xzf $1    ;;
      *.bz2)     bunzip2 $1    ;;
      *.rar)     rar x $1    ;;
      *.gz)      gunzip $1   ;;
      *.tar)     tar xf $1   ;;
      *.tbz2)    tar xjf $1    ;;
      *.tgz)     tar xzf $1    ;;
      *.zip)     ziprm $1    ;;
      *.Z)       uncompress $1 ;;
      *)      echo "'$1' cannot be extracted via extract()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

ziprm () {
  if [ -f $1 ] ; then
    unzip $1
    rm $1
  else
    echo "Need a valid zipfile"
  fi
}

psgrep() {
  if [ ! -z $1 ] ; then
    echo "Grepping for processes matching $1..."
    ps aux | grep $1 | grep -v grep
  else
    echo "!! Need name to grep for"
  fi
}

mine() {
  sudo chown -R ${USER} ${1:-.}
}

cdl() {
  if [ "$1" ]
  then builtin cd "$1" && ll
  else builtin cd && ll
  fi
}

alert() {
  say $1
  growlnotify -m "$1"
  echo $'\a'
}

path(){
  old=$IFS
  IFS=:
  printf "%s\n" $PATH
  IFS=$old
}

pathmunge () {
  if ! echo $PATH | /usr/bin/grep -E -q "(^|:)$1($|:)" ; then
     if [ "$2" = "after" ] ; then
        PATH=$PATH:$1
     else
        PATH=$1:$PATH
     fi
  fi
}
